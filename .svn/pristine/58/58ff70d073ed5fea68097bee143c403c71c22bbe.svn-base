package com.slamdh.apiserver.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.slamdh.apiserver.controller.CustomController;
import com.slamdh.apiserver.mapper.CustomMapper;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

@Service
public class CustomService {
	static final Logger logger = LoggerFactory.getLogger(CustomService.class);
	
	@Autowired
	CustomMapper customMapper;
	
	
    //		  에이전트 현황 조회 
	public ArrayList<Map<String, Object>>  SelectCustomAgentCount(Map<String, Object> map) throws Exception {		
		return customMapper.SelectCustomAgentCount(map); 
	}
	
	//			고객사 관리자 목록 조회
	public ArrayList<Map<String, Object>>  SelectCustomAdminLists(Map<String, Object> map) throws Exception {		
		return customMapper.SelectCustomAdminLists(map); 
	}	

	//			고객사 관리자 등록
	public  int  InsertCustomAdmin(Map<String, Object> map) throws Exception {		
		return customMapper.InsertCustomAdmin(map); 
	}
	
	//			고객사 관리자 목록 조회
	public  int  DeleteCustomAdmin(Map<String, Object> map) throws Exception {		
		return customMapper.DeleteCustomAdmin(map); 
	}
	
	
//	public String SelectCustomDeptLists(Map<String, Object> map) throws Exception {
	public Map<String, Object> SelectCustomDeptLists(Map<String, Object> map) throws Exception {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		String resultdata ="";
		ArrayList<Map<String, Object>>  Map = new ArrayList<Map<String, Object>> ();
		Map<String, Object> params = new HashMap<String, Object>();		
		
		// 부서 정보 Json 구조 생성
		JSONArray deptJsonArr = new JSONArray();
		
		try {
			params.put("customId", map.get("customId"));
			params.put("deptLev", map.get("deptLev"));
			
			Map = customMapper.SelectCustomDeptLists(map);
			  		
	        for (Map<String, Object> tempData :  Map  ) {
	        	JSONObject deptData = new JSONObject();
	        	String  NewName = ""; 
	        	
	        	deptData.put("value", tempData.get("id") + "");
	        	deptData.put("text", tempData.get("filename") + "");
	        	if (! tempData.get("parentId").equals("1") ) {
	        		deptData.put("PARENT_ID", tempData.get("parentId") + "");	
	        	}		        	
	        	deptData.put("level", tempData.get("level") + "");
	        	deptJsonArr.add(deptData);	        	
	        }
			
	        resultMap.put("ArrayDept", deptJsonArr);	        
			// 고객사 Tree Node 만들기 위한 부분
			JSONObject TempDep ;
			JSONObject parentDept ;
			JSONObject DeptJson  = new JSONObject();;
			JSONArray tempdeptJsonArr ;
			for (int iRow = deptJsonArr.size() ; iRow > 0 ; iRow --) {			
				TempDep = new JSONObject();
				TempDep = (JSONObject)deptJsonArr.get(iRow - 1);
  
				if (!TempDep.get("level").equals("1") ){
					// 상위 노드부터 검색을 위한 부분
					for (int iPidx = deptJsonArr.size() ; iPidx > 0 ; iPidx --) {
						parentDept = new JSONObject();
						parentDept = (JSONObject)deptJsonArr.get(iPidx -1);					
											
						if (TempDep.get("PARENT_ID").equals(parentDept.get("value"))) {
							tempdeptJsonArr = new JSONArray();
							if (parentDept.get("children") != null) {
								tempdeptJsonArr = (JSONArray)parentDept.get("children");					
								} 
						   tempdeptJsonArr.add(TempDep);			
						   parentDept.put("children", tempdeptJsonArr); 	
						   DeptJson = parentDept;					    
						   break;										
						}
					}						
				} 
			}
			
			System.out.println(" ===DeptJson============= ");
			System.out.println(DeptJson.toJSONString());		
			
			resultMap.put("JsonDept", DeptJson.toString());				 
			
			return resultMap; 
		} catch(Exception e) {
			logger.info(e.getMessage());
		}				
		 
		return  null;
	}	
	 
	 
	  
	//			부서 등록
	public  int  InsertCustomDept(Map<String, Object> map) throws Exception {		
		return customMapper.InsertCustomDept(map); 
	}
	
		
	public  int  DeleteCustomDept(Map<String, Object> map) throws Exception {		
		return customMapper.DeleteCustomDept(map); 
	}		
	
	
		
}
