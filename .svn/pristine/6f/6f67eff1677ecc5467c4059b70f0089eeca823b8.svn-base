package com.slamdh.apiserver.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.elasticsearch.action.search.SearchRequest;
import org.elasticsearch.action.search.SearchResponse;
import org.elasticsearch.client.RestHighLevelClient;
import org.elasticsearch.index.query.QueryBuilder;
import org.elasticsearch.index.query.QueryBuilders;
import org.elasticsearch.search.builder.SearchSourceBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.slamdh.apiserver.ElasticsearchConfiguration;
import com.slamdh.apiserver.mapper.UserMapper;

@Controller
public class CommonController {

	static final Logger logger = LoggerFactory.getLogger(CommonController.class);

	@Autowired
	ElasticsearchConfiguration esConfig;
	
	@Autowired
	UserMapper userMapper;
	
	@RequestMapping({"","/"})
    void index(HttpServletRequest request, HttpServletResponse response) {
        
		
		// common
		QueryBuilder qb = QueryBuilders.matchAllQuery();


		try {
			RestHighLevelClient client = esConfig.getRestClient();
			SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().query(qb);
			SearchRequest searchRequest = new SearchRequest("pimonng-1").types("pimonng_type").source(searchSourceBuilder);
			
			System.out.println("=====================");
			System.out.println(searchRequest.source().toString());
			System.out.println("=====================");
			
			SearchResponse searchResponse = client.search(searchRequest);
			
			// common
			searchResponse.getHits().forEach(item -> {
				// do something
				
				System.out.println(item.getSourceAsMap());
				System.out.println(item.getSourceAsString());
				
			});
			
			
			Map<String, String> map = userMapper.getUser("admin");
			System.out.println("==============" + map.get("ADMINID"));
			
			
		} catch (Exception e) {
			System.out.println("=================> " +  e.getMessage());
		}
		
    }
	
	
	@RequestMapping({"/api/users"})
	@ResponseBody
	ArrayList<Map<String, String>> test(HttpServletRequest request, HttpServletResponse response) {
		
		
		Map<String, String> map = null;
		try {
			map = userMapper.getUser("admin");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		Map<String, String> resultMap = new HashMap<String, String>();
		resultMap.put("username", map.get("USERNAME"));
		resultMap.put("password", map.get("PASSWORD"));
		ArrayList<Map<String, String>> array = new ArrayList<Map<String, String>>(); 
		array.add(resultMap);
		
		return array;
	}
	
	
}
