package com.slamdh.apiserver.controller;


import java.util.ArrayList;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.slamdh.apiserver.service.CustomService;

@Controller
public class CustomController {
	static final Logger logger = LoggerFactory.getLogger(CustomController.class);
	
	@Autowired
	CustomService customService; 	
	
	// 고객사 내 에이전트 현황 및 라이선스 현황 조회
	@RequestMapping({"/api/Custom/selectagentcount"})
	@ResponseBody
	ArrayList<Map<String, Object>>  getCustomAgentCount(HttpServletRequest request, HttpServletResponse response) {
		
		String customId = request.getParameter("customId");
		
		Map<String, Object> params = new HashMap<String, Object>();
		ArrayList<Map<String, Object>>  resultMap = new ArrayList<Map<String, Object>> ();
		
		try {
			params.put("customId", customId);
			
			resultMap = customService.SelectCustomAgentCount(params);
		} catch(Exception e) {
			logger.info(e.getMessage());
		}			
		return  resultMap;		
	}		
	
	// 고객사 관리자 목록 조회  
	@RequestMapping({"/api/Custom/selectadminlists"})
	@ResponseBody
	ArrayList<Map<String, Object>>  getCustomAdminLists(HttpServletRequest request, HttpServletResponse response) {
		
		String customId = request.getParameter("customId");
		
		Map<String, Object> params = new HashMap<String, Object>();
		ArrayList<Map<String, Object>>  resultMap = new ArrayList<Map<String, Object>> ();
		  
		try {
			params.put("customId", customId);
			
			resultMap = customService.SelectCustomAdminLists(params);
		} catch(Exception e) {
			logger.info(e.getMessage());
		}			
		return  resultMap;		
	}		
	
	// 고객사 관리자 등록
		@RequestMapping({"/api/Custom/insertadminlists"})
		@ResponseBody
		int setCustomAdminInsert(HttpServletRequest request, HttpServletResponse response) {
									
			Map<String, Object> params = new HashMap<String, Object>();
			int  resultMap = 0;
			String DeptList = "";
			
			try {
				params.put("customId", request.getParameter("customId"));
				params.put("adminId", request.getParameter("adminId"));
				params.put("password", request.getParameter("password"));
				params.put("adminName", request.getParameter("adminName"));
				params.put("email", request.getParameter("email"));
				params.put("phone", request.getParameter("phone"));
				params.put("cellphone", request.getParameter("cellphone"));
				params.put("menu_option", request.getParameter("menu_option"));
				params.put("role_id", request.getParameter("role_id"));
				
				String chgGroupId = "";
				if (request.getParameter("role_id").toString().equals("2")) {
					String[] groupArr = request.getParameter("deptlist").split(",");
					for(String groupId : groupArr) {
						chgGroupId += "\"" + groupId + "\",";
					}
					if(chgGroupId.length() > 0) {
						chgGroupId = chgGroupId.substring(0, chgGroupId.length()-1);		
					}					
				}
 
				params.put("groupid", chgGroupId);
											 
				resultMap = customService.InsertCustomAdmin(params);
			} catch(Exception e) {
				logger.info(e.getMessage());
			}			 
			return  resultMap;		
		}		
		
		  
		
	// 고객사 관리자 삭제
	@RequestMapping({"/api/Custom/deleteadminlists"})
	@ResponseBody
	int setCustomAdminDelete(HttpServletRequest request, HttpServletResponse response) {
								
		Map<String, Object> params = new HashMap<String, Object>();
		int  resultMap = 0;
		  
		try {
			params.put("customId", request.getParameter("customId"));
			params.put("adminId", request.getParameter("adminId"));
			  
			resultMap = customService.DeleteCustomAdmin(params);
		} catch(Exception e) {
			logger.info(e.getMessage());
		}			
		return  resultMap;		
	}		
			
//    부서목록 조회
	// 고객사 관리자 목록 조회  
	@RequestMapping({"/api/Custom/selectdeptlists"})
	@ResponseBody
	 Map<String, Object>  getCustomDeptLists(HttpServletRequest request, HttpServletResponse response) {
 				
		Map<String, Object> params = new HashMap<String, Object>(); 
 	    Map<String, Object> ResultData = new HashMap<String, Object>(); 
		
		try {
			params.put("customId", request.getParameter("customId"));
			params.put("deptLev", request.getParameter("deptLev"));
			params.put("checkJson", request.getParameter("checkJson"));
			
			ResultData = customService.SelectCustomDeptLists(params);
			  
		} catch(Exception e) {
			logger.info(e.getMessage());
		}			
		return  ResultData;		
	}			
	
	
//	 부서 등록
	@RequestMapping({"/api/Custom/insertdeptlists"})
	@ResponseBody
	int setCustomDeptInsert(HttpServletRequest request, HttpServletResponse response) {
								
		Map<String, Object> params = new HashMap<String, Object>();
		int  resultMap = 0;
		String ID =  "{" + UUID.randomUUID() + "}";	  
		try {
			params.put("customId", request.getParameter("customId"));
			params.put("groupid", ID);			
			params.put("groupname", request.getParameter("NAME"));			
			params.put("parentgroupid", request.getParameter("ID"));
			params.put("GroupDepth", request.getParameter("level"));
			params.put("adminid", request.getParameter("adminid"));
						  
			resultMap = customService.InsertCustomDept(params);
		} catch(Exception e) {
			logger.info(e.getMessage());
		}			
		return  resultMap;		
	}		
			
	
	// 고객사 부서 삭제 
	@RequestMapping({"/api/Custom/deleteadeptlists"})
	@ResponseBody
	int setCustomDeptDelete(HttpServletRequest request, HttpServletResponse response) {
								
		Map<String, Object> params = new HashMap<String, Object>();
		int  resultMap = 0;
		  
		try {
			params.put("customId", request.getParameter("customId"));
			params.put("groupid", request.getParameter("groupid"));
			  
			resultMap = customService.DeleteCustomDept(params);
		} catch(Exception e) {
			logger.info(e.getMessage());
		}			
		return  resultMap;		
	}	
	
	// 부서 관리자 등록
	@RequestMapping({"/api/Custom/insertadmindeptlist"})
	@ResponseBody
	int setCustomAdminDeptList(HttpServletRequest request, HttpServletResponse response) {
								
		Map<String, Object> params = new HashMap<String, Object>();
		int  resultMap = 0;
		  
		try {
			params.put("customId", request.getParameter("customId"));
			params.put("adminId", request.getParameter("adminId"));
			params.put("deptID", request.getParameter("deptID"));
			
			String deptList[] = request.getParameter("deptID").split(",");	
			for (int loop =0; loop < deptList.length ; loop++) {
				
				
			}
			
		 	  
			resultMap = customService.DeleteCustomDept(params);
		} catch(Exception e) {
			logger.info(e.getMessage());
		}			
		return  resultMap;		
	}	


}
